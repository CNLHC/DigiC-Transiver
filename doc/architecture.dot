digraph G {
    rankdir=LR
    node[shape="record"]
    PC [label="PC"]
    SPI_Slave[label="SPI Slave" ]
    PACKAGE_FIFO[label="Package FIFO\n(raw)"]
    PC->SPI_Slave [label="H.264 Bytes\nstream"]
    SPI_Slave -> PACKAGE_FIFO [label="" ]

    PACKAGE_FIFO-> S2P1[arrowhead="inv"]
    subgraph clusterQAM{
        label="QAM modulation"
        S2P1[label="Mapper Bridge"]
        QAMFIFO[label="Data FIFO\n(QAM-modulated,\n Complex Array)"]
        QAMMapper[label="QAM Symbol\n Mapper"]
        { rank=same; S2P1 QAMFIFO QAMMapper};
        S2P1->QAMMapper
        QAMMapper -> QAMFIFO
    }

    S2P1->OFDMBridge[style="invis"]
    QAMFIFO-> OFDMBridge[arrowhead="inv",constraint=false,headport=wn]

    subgraph clusterOFDM{
        label="OFDM modulation"
        OFDMBridge[label="OFDM Bridge"]
        // IFFTCore[label="IFFT IP Core"]
        // S2P2[label="Serial/Parallel\n add Cyclic Prefix"]
        OFDMMapper[label="OFDM Symbol \nGenerator"]
        TimeDomainFIFO[label="Data FIFO\n(Time-Domain,\nReal Array )"]
        Shapping[label="shaping Filter"]
        { rank=same;OFDMBridge TimeDomainFIFO OFDMMapper,Shapping}
        OFDMBridge->OFDMMapper
        OFDMMapper->Shapping
        Shapping->TimeDomainFIFO
    }

    OFDMBridge -> DACController[style="invis"]
    TimeDomainFIFO -> DACController [arrowhead="inv",constraint=false,headport=wn]
    DAC[label="TI DAC5672"]
    DACController[label="DAC Bridge"] 
    DACController->DAC

}